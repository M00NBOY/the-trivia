{"version":3,"sources":["helpers/api.js","helpers/localstorage.js","views/Home/Home.js","views/Home/HomeContainer.js","views/Category/Category.js","views/Category/CategoryContainer.js","components/App/App.js","serviceWorker.js","index.js"],"names":["api","getCategories","_getCategories","Object","asyncToGenerator","regenerator_default","a","mark","_callee","offset","response","json","wrap","_context","prev","next","fetch","concat","sent","abrupt","stop","this","_x","apply","arguments","getCategorybyId","_getCategorybyId","_callee2","id","_context2","_x2","storeLocal","saveLastCategory","categoryId","localStorage","setItem","JSON","stringify","getLastCategory","_","parse","getItem","saveCategoryGame","categoryData","data","newData","objectSpread","defineProperty","getCategoryGame","Home","_ref","categories","lastCategory","moreCat","react_default","createElement","className","length","map","category","i","key","Link","to","process","title","String","onClick","HomeContainer","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","getMoreCategory","bind","assertThisInitialized","setState","document","querySelector","focus","window","addEventListener","event","preventDefault","nextElement","activeElement","parentNode","nextSibling","firstChild","prevElement","previousSibling","toConsumableArray","views_Home_Home","Component","Category","_ref$category","clues","input","inputChange","checkAnswer","game","remainingQuestions","resetCategory","nextQuestion","score","questionIndex","question","attempts","type","placeholder","value","onChange","onKeyDown","result","answer","CategoryContainer","match","params","gameData","e","target","_this2","which","console","log","toLowerCase","_this3","_this4","_this$state","views_Category_Category","App","BrowserRouter","react","Route","path","exact","component","Boolean","location","hostname","ReactDOM","render","components_App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e21aa928.chunk.js","sourcesContent":["const api = {\n  async getCategories (offset) {\n    const response = await fetch(`http://jservice.io/api/categories?count=100&offset=${offset}`)\n    const json = response.json()\n    return json\n  },\n  async getCategorybyId (id) {\n    const response = await fetch(`http://jservice.io/api/category?id=${id}`)\n    const json = await response.json()\n    return json\n  }\n}\n\nexport default api","const storeLocal = {\n    saveLastCategory : categoryId => {\n        localStorage.setItem('lastCategory', JSON.stringify(categoryId))\n    },\n    \n    getLastCategory : _=> {\n        return JSON.parse(localStorage.getItem('lastCategory'))\n    },\n\n    saveCategoryGame : (categoryData, categoryId) => {\n        const data = JSON.parse(localStorage.getItem('categoriesData'))\n        const newData = {\n            ...data,\n            [categoryId]: categoryData\n        }        \n        localStorage.setItem('categoriesData', JSON.stringify(newData))\n    },\n    getCategoryGame : (categoryId) => {\n        const data = JSON.parse(localStorage.getItem('categoriesData'))\n        return data ? data[categoryId] : null\n    }\n}\n\nexport default storeLocal","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nconst Home = ({ categories, lastCategory, moreCat }) => (\n  <section className=\"homepage crt\">\n    <h2>Homepage - Category selection</h2>\n    {\n      categories.length > 0 && (\n        <section>\n          <ul>\n          { categories.map((category, i) =>\n            (<li key={category.id} className='categoryLi'>\n              <Link to={`${process.env.PUBLIC_URL}/category/${category.id}`}>\n                {category.title}\n              </Link>\n              { String(category.id) === String(lastCategory) && (<span className=\"lastCatIndication\">&lt; LAST CATEGORY SELECTED</span>) }\n            </li>)\n          )}\n          </ul>\n        </section>\n      )\n    }\n    <button className=\"moreCatButton\" onClick={moreCat}>More categories</button>\n  </section>\n)\n\nHome.propTypes = {\n  categories: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      clues_count: PropTypes.number\n    })\n  )\n}\n\nexport default Home","import React, { Component } from 'react';\nimport api from '../../helpers/api'\nimport storeLocal from '../../helpers/localstorage'\nimport Home from './Home.js'\n\nclass HomeContainer extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      offset: 0,\n      categories: []\n    }\n    this.getMoreCategory = this.getMoreCategory.bind(this)\n  }\n\n  async componentDidMount () {\n    await this.getMoreCategory()    \n    \n    const lastCategory = storeLocal.getLastCategory()\n    this.setState({\n      lastCategory\n    })\n\n    document.querySelector('a').focus()\n    window.addEventListener('keydown', event => {\n      if (event.key === 'ArrowDown') {\n        event.preventDefault()\n        const nextElement = document.activeElement.parentNode.nextSibling\n        if (nextElement && nextElement.className === 'categoryLi') {\n          nextElement.firstChild.focus()\n        }\n      }\n      else if (event.key === 'ArrowUp') {\n        event.preventDefault()\n        const prevElement = document.activeElement.parentNode.previousSibling\n        if (prevElement && prevElement.className === 'categoryLi') {\n          prevElement.firstChild.focus()\n        }\n      }\n      // TODO: removeEventListener in componentDidUnmount\n    })\n  }\n\n  async getMoreCategory () {\n    const { offset } = this.state\n    const data = await api.getCategories(offset)\n    \n    this.setState(({ categories, offset }) => ({\n      categories: [...categories, ...data],\n      offset: offset + 100\n    }))\n  }\n\n  render () {\n    return (\n      <Home categories={this.state.categories} lastCategory={this.state.lastCategory} moreCat={this.getMoreCategory} />\n    )\n  }\n}\n\nexport default HomeContainer","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Category = ({\n  category: { clues, title },\n  input,\n  inputChange,\n  checkAnswer,\n  game,\n  remainingQuestions,\n  resetCategory,\n  nextQuestion\n}) => (\n  <section className=\"category crt\">\n    <Link className =\"back\" to=\"\">Back to Home</Link>\n    <h3>[Category: {title}]</h3>\n    <p className=\"score\">Score: {game.score}{clues && !remainingQuestions() && (<span>/{clues.length}</span>)}</p>\n    { clues && remainingQuestions() && (\n      <div>\n        <div className=\"question\">\n          <h4>&#60; Question #{game.questionIndex+1} &#62;</h4>\n          <p>{clues && clues[game.questionIndex].question}</p>\n        </div>\n        {game.attempts !== 0 && (\n        <div className=\"answer\">\n          {/* <label htmlFor=\"answer\">Your answer: </label> */}\n          <span>\n            <input\n              id=\"answer\"\n              className=\"answerInput\"\n              type='text'\n              placeholder=\"Type your answer\"\n              value={input}\n              onChange={inputChange}\n              onKeyDown={checkAnswer}\n            />\n          </span>\n        </div>\n        )}\n        { game.result !== null &&\n          (<div>\n            <p className=\"answergame\">{\n              game.result ? \"\" : \"Wrong answer, \" + (game.attempts !== 0 ? `${game.attempts} attempts left` : \"attempts left: 0 >>> Good answer: \" + clues[game.questionIndex].answer + \" <<<<\") \n            }</p>\n          </div>)\n        }\n        <button className=\"nextQuestion\" onClick={nextQuestion}>Next question</button>\n      </div>\n    )}\n    {\n      clues && !remainingQuestions() && (\n        <div className=\"result\">\n          <p>\n            { game.score > clues.length/2 && (\"Well played!!\") }\n            { game.score < clues.length/2 && (\"Too bad!!\") }\n          </p>\n          \n        </div>\n      )\n    }\n    { game.questionIndex > 0 && (<button className=\"reset\" onClick={resetCategory}>Reset</button>)}\n  </section>\n)\n\nexport default Category","import React, { Component } from 'react'\nimport api from '../../helpers/api'\nimport Category from './Category'\nimport storeLocal from '../../helpers/localstorage'\n\nclass CategoryContainer extends Component {\n  constructor () {\n    super()\n    this.state = {\n      category: {},\n      game: {\n        questionIndex: 0,\n        attempts: 3,\n        result: null,\n        score: 0\n      },\n      input: '',\n    }\n    this.inputChange = this.inputChange.bind(this)\n    this.checkAnswer = this.checkAnswer.bind(this)\n    this.resetCategory = this.resetCategory.bind(this)\n    this.remainingQuestions = this.remainingQuestions.bind(this)\n    this.nextQuestion = this.nextQuestion.bind(this)\n  }\n  \n  componentWillMount () {\n    storeLocal.saveLastCategory(this.props.match.params.id)\n  }\n\n  async componentDidMount () {\n    const data = await api.getCategorybyId(this.props.match.params.id)\n    this.setState({\n      category: data\n    })\n\n    const gameData = storeLocal.getCategoryGame(this.props.match.params.id)\n    if (gameData) {\n      this.setState({\n        game: gameData\n      })\n    }\n  }\n  \n  inputChange (e) {\n    this.setState({\n      input: e.target.value\n    })\n  }\n\n  checkAnswer (e) {\n    if (e.which !== 13) return\n    if (this.state.game.attempts < 1) {\n      return\n    }\n    const { category: { clues } } = this.state\n    console.log('answer: ', clues[this.state.game.questionIndex].answer)\n\n    this.setState((state) => {\n      if(this.state.input.toLowerCase() === clues[this.state.game.questionIndex].answer.toLowerCase()){\n        return {\n          input: '',\n          game: {\n            ...state.game,\n            result: true,\n            score: state.game.score + 1,\n            attempts: 3,\n            questionIndex: state.game.questionIndex + 1\n          }\n        }\n      } else {\n        return {\n          input: '',\n          game: {\n            ...state.game,\n            result: false,\n            attempts: state.game.attempts - 1\n          }\n        }\n      }\n    }, () => {\n      storeLocal.saveCategoryGame(this.state.game, this.props.match.params.id)\n    })\n  }\n\n  resetCategory (e) {\n    e.preventDefault()\n    this.setState((state) => ({\n      input: '',\n      game: {\n        ...state.game,\n        result: null,\n        score: 0,\n        attempts: 3,\n        questionIndex: 0\n      }\n    }), () => {\n    storeLocal.saveCategoryGame(this.state.game, this.props.match.params.id)\n    })\n  }\n\n  remainingQuestions () {\n    return this.state.game.questionIndex < this.state.category.clues.length\n  }\n\n  nextQuestion () {\n    console.log(this.state)\n    this.setState((state) => ({\n      input: '',\n      game: {\n        ...state.game,\n        result: null,\n        score: state.game.score,\n        attempts: 3,\n        questionIndex: state.game.questionIndex+1\n      }\n    }), () => {\n      storeLocal.saveCategoryGame(this.state.game, this.props.match.params.id)\n    })\n  }\n\n  render () {\n    const { category, input, game } = this.state\n    return (\n      <Category\n        category={category}\n        input={input}\n        inputChange={this.inputChange}\n        checkAnswer={this.checkAnswer}\n        resetCategory={this.resetCategory}\n        remainingQuestions={this.remainingQuestions}\n        nextQuestion={this.nextQuestion}\n        game={game}\n      />\n    )\n  }\n}\n\nexport default CategoryContainer","import React, { Component, Fragment } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\nimport HomeContainer from '../../views/Home/HomeContainer'\nimport CategoryContainer from '../../views/Category/CategoryContainer'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n      <div className=\"App\">\n        <Fragment>\n          <Route path={`${process.env.PUBLIC_URL}/`} exact component={HomeContainer} />\n          <Route path={`${process.env.PUBLIC_URL}/category/:id`} component={CategoryContainer} />\n        </Fragment>\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.css';\nimport './styles/index.css';\nimport App from './components/App/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}